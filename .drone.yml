---
kind: pipeline
name: default

steps:
- name: build
  image: docker
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - pull_request
      - tag
  environment:
    SSH_PRIVATE_KEY:
      from_secret: SSH_PRIVATE_KEY
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  commands:
    - export DOCKER_HOST=unix:///var/run/host.sock
    - docker login -u 'robot$drone' -p $DOCKER_PASSWORD harbor.dsrd.libraries.psu.edu
    - docker build -t harbor.dsrd.libraries.psu.edu/library/ss-shrine:$DRONE_BUILD_NUMBER . 
    - docker push harbor.dsrd.libraries.psu.edu/library/ss-shrine:$DRONE_BUILD_NUMBER
  volumes:
  - name: docker-sock
    path: /var/run/host.sock

- name: update ArgoCD
  image: alpine/git
  environment:
    CONFIG_ENV: dev
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - pull_request
      - tag
  commands:
    - git clone https://github.com/psu-stewardship/ss-shrine-config.git
    - cd ss-shrine-config
    - ./generate_application.sh

services:
- name: postgres
  image: postgres:10
  when:
    branch:
      exclude:
        - skip-ci*
    event:
      exclude:
      - pull_request
      - tag
  environment:
    POSTGRES_PASSWORD: ss-shrine-test
    POSTGRES_USER: ss-shrine
    POSTGRES_DB: ss-shrine
  
volumes:
- name: docker-sock
  host:
    path: /var/run/docker.sock
